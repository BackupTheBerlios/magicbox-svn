diff -Nru tcp_wrappers_7.6/extra/safe_finger.8 tcp_wrappers_7.6-fixed/extra/safe_finger.8
--- tcp_wrappers_7.6/extra/safe_finger.8	1970-01-01 01:00:00.000000000 +0100
+++ tcp_wrappers_7.6-fixed/extra/safe_finger.8	2006-03-12 20:41:13.000000000 +0100
@@ -0,0 +1,34 @@
+.TH SAFE_FINGER 8 "21th June 1997" Linux "Linux Programmer's Manual"
+.SH NAME
+safe_finger \- finger client wrapper that protects against nasty stuff
+from finger servers
+.SH SYNOPSIS
+.B safe_finger [finger_options]
+.SH DESCRIPTION
+The
+.B safe_finger
+command protects against nasty stuff from finger servers. Use this
+program for automatic reverse finger probes from the
+.B tcp_wrapper
+.B (tcpd)
+, not the raw finger command. The
+.B safe_finger
+command makes sure that the finger client is not run with root
+privileges. It also runs the finger client with a defined PATH
+environment.
+.B safe_finger
+will also protect you from problems caused by the output of some
+finger servers. The problem: some programs may react to stuff in
+the first column. Other programs may get upset by thrash anywhere
+on a line. File systems may fill up as the finger server keeps
+sending data. Text editors may bomb out on extremely long lines.
+The finger server may take forever because it is somehow wedged.
+.B safe_finger
+takes care of all this badness.
+.SH SEE ALSO
+.BR hosts_access (5),
+.BR hosts_options (5),
+.BR tcpd (8)
+.SH AUTHOR
+Wietse Venema, Eindhoven University of Technology, The Netherlands.
+
diff -Nru tcp_wrappers_7.6/extra/try-from.8 tcp_wrappers_7.6-fixed/extra/try-from.8
--- tcp_wrappers_7.6/extra/try-from.8	1970-01-01 01:00:00.000000000 +0100
+++ tcp_wrappers_7.6-fixed/extra/try-from.8	2006-03-12 20:41:13.000000000 +0100
@@ -0,0 +1,28 @@
+.TH TRY-FROM 8 "21th June 1997" Linux "Linux Programmer's Manual"
+.SH NAME
+try-from \- test program for the tcp_wrapper
+.SH SYNOPSIS
+.B try-from
+.SH DESCRIPTION
+The
+.B try-from
+command can be called via a remote shell command to find out
+if the hostname and address are properly recognized
+by the
+.B tcp_wrapper
+library, if username lookup works, and (SysV only) if the TLI
+on top of IP heuristics work. Diagnostics are reported through
+.BR syslog (3)
+and redirected to stderr.
+
+Example:
+
+rsh host /some/where/try-from
+
+.SH SEE ALSO
+.BR hosts_access (5),
+.BR hosts_options (5),
+.BR tcpd (8)
+.SH AUTHOR
+Wietse Venema, Eindhoven University of Technology, The Netherlands.
+
diff -Nru tcp_wrappers_7.6/percent_m.c tcp_wrappers_7.6-fixed/percent_m.c
--- tcp_wrappers_7.6/percent_m.c	1994-12-28 17:42:37.000000000 +0100
+++ tcp_wrappers_7.6-fixed/percent_m.c	2006-03-12 20:54:49.000000000 +0100
@@ -13,10 +13,10 @@
 #include <string.h>
 
 extern int errno;
-#ifndef SYS_ERRLIST_DEFINED
-extern char *sys_errlist[];
-extern int sys_nerr;
-#endif
+//#ifndef SYS_ERRLIST_DEFINED
+//extern char *sys_errlist[];
+//extern int sys_nerr;
+//#endif
 
 #include "mystdarg.h"
 
@@ -29,11 +29,16 @@
 
     while (*bp = *cp)
 	if (*cp == '%' && cp[1] == 'm') {
+#define HAVE_STRERROR
+#ifdef HAVE_STRERROR
+	    strcpy(bp, strerror(errno));
+#else
 	    if (errno < sys_nerr && errno > 0) {
 		strcpy(bp, sys_errlist[errno]);
 	    } else {
 		sprintf(bp, "Unknown error %d", errno);
 	    }
+#endif
 	    bp += strlen(bp);
 	    cp += 2;
 	} else {
